{"ast":null,"code":"import _slicedToArray from \"/home/kenzo/\\xC1rea de Trabalho/Desktop/GitHub/GetRepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kenzo/\\xC1rea de Trabalho/Desktop/GitHub/GetRepo/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Container from '../../components/Container';\nimport { Loading, Owner, Filter, IssueList, PageButton } from './styles';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      filter: '',\n      page: 1,\n      loading: true\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n\n    this.handlePages = action => {\n      const page = this.state.page;\n      this.setState({\n        page: action === 'back' ? page - 1 : page + 1\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository);\n    /*When you have 2 or more async processes that do not depends the end of a process to start your,\n      you can use the Promise.all that execute all the processes in the same time.\n      To get the return of each process you will need to create a array to receive then,\n      then order the return like the order of the processes. */\n\n    const _ref = await Promise.all([api.get(\"/repos/\".concat(repoName)), api.get(\"/repos/\".concat(repoName, \"/issues\"))]),\n          _ref2 = _slicedToArray(_ref, 2),\n          repository = _ref2[0],\n          issues = _ref2[1];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          repository = _this$state.repository,\n          issues = _this$state.issues,\n          loading = _this$state.loading,\n          filter = _this$state.filter,\n          page = _this$state.page;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Carregando\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, repository.description)), React.createElement(Filter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"issue-state\",\n      value: \"all\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" all\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"issue-state\",\n      value: \"open\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" open\", React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"issue-state\",\n      value: \"close\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \" close\"), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, issues.map(issue => issue.state === filter && React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, issue.user.login))))), React.createElement(PageButton, {\n      page: page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, page >= 2 && React.createElement(\"button\", {\n      onClick: this.handlePages('back'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      issues: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/kenzo/√Årea de Trabalho/Desktop/GitHub/GetRepo/src/pages/Repository/index.js"],"names":["React","Component","api","Link","PropTypes","Container","Loading","Owner","Filter","IssueList","PageButton","Repository","state","repository","issues","filter","page","loading","handleInputChange","e","setState","target","value","handlePages","action","componentDidMount","match","props","repoName","decodeURIComponent","params","Promise","all","get","data","render","owner","avatar_url","login","name","description","map","issue","String","id","user","html_url","title","labels","label","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Container from '../../components/Container'\nimport { Loading, Owner, Filter, IssueList, PageButton } from './styles';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        issues: PropTypes.string,\n      }),\n    }).isRequired,\n  }\n\n  state = {\n    repository: {},\n    issues: [],\n    filter: '',\n    page: 1,\n    loading: true,\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    /*When you have 2 or more async processes that do not depends the end of a process to start your,\n      you can use the Promise.all that execute all the processes in the same time.\n      To get the return of each process you will need to create a array to receive then,\n      then order the return like the order of the processes. */\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`),\n    ])\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    })\n  }\n\n  handleInputChange = e => {\n    this.setState({ filter: e.target.value });\n  }\n\n  handlePages = action => {\n    const { page } = this.state;\n\n    this.setState({ page: action === 'back' ? page - 1 : page + 1 })\n  }\n\n  render() {\n    const { repository, issues, loading, filter, page } = this.state;\n\n    if (loading) {\n      return <Loading>Carregando</Loading>\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos reposit√≥rios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <Filter>\n          <input type=\"radio\" name=\"issue-state\" value=\"all\" onChange={this.handleInputChange} /> all\n          <input type=\"radio\" name=\"issue-state\" value=\"open\" onChange={this.handleInputChange} /> open\n          <input type=\"radio\" name=\"issue-state\" value=\"close\" onChange={this.handleInputChange} /> close\n        </Filter>\n\n        <IssueList>\n          {\n            issues.map(issue =>\n              issue.state === filter &&\n              (\n                <li key={String(issue.id)}>\n                  <img src={issue.user.avatar_url} alt={issue.user.login} />\n                  <div>\n                    <strong>\n                      <a href={issue.html_url}>{issue.title}</a>\n\n                      {issue.labels.map(label => (\n                        <span key={String(label.id)}>{label.name}</span>\n                      ))}\n                    </strong>\n                    <p>{issue.user.login}</p>\n                  </div>\n                </li>\n              ))\n          }\n        </IssueList>\n        <PageButton page={page}>\n          {page >= 2 && (<button onClick={this.handlePages('back')}>Back</button>)}\n          <button>Next</button>\n        </PageButton>\n      </Container >\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}