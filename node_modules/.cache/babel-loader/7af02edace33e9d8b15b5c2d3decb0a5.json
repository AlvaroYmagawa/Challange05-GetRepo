{"ast":null,"code":"var _jsxFileName = \"/home/kenzo/\\xC1rea de Trabalho/Desktop/GitHub/GetRepo/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGitAlt, FaPlus, FaSpinner, FaTrashAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List, DeleteButton, Error } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      err: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleDelete = repo => {\n      const repositories = this.state.repositories;\n      this.setState({\n        repositories: repositories.find(r => r !== repo)\n      });\n    };\n\n    this.handleSubmit = async e => {\n      try {\n        e.preventDefault();\n        this.setState({\n          loading: true,\n          err: false\n        });\n        const _this$state = this.state,\n              newRepo = _this$state.newRepo,\n              repositories = _this$state.repositories;\n        const response = await api.get(\"/repos/\".concat(newRepo));\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: '',\n          loading: false\n        });\n      } catch (err) {\n        this.setState({\n          loading: false,\n          err: true\n        });\n      }\n    };\n  }\n\n  // Load datas in localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Save datas in localStorage\n\n\n  componentDidUpdate(_, prevState) {\n    const repositories = this.state.repositories;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newRepo = _this$state2.newRepo,\n          loading = _this$state2.loading,\n          repositories = _this$state2.repositories,\n          err = _this$state2.err;\n    return React.createElement(Container, {\n      err: err,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FaGitAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \"Reposit\\xF3rios\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      err: err,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      err: err,\n      type: \"text\",\n      placeholder: \"Adicione o 'Nome de usu\\xE1rio / nome do reposit\\xF3rio'\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, loading ? // If the loading is true show the Spinner icon\n    React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : // Else Show the plus icon\n    React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, repository.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/repository/\".concat(encodeURIComponent(repository.name)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Detalhes\"), React.createElement(DeleteButton, {\n      onDelete: () => this.handleDelete(repository),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(FaTrashAlt, {\n      color: \"#FFF\",\n      size: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/home/kenzo/√Årea de Trabalho/Desktop/GitHub/GetRepo/src/pages/Main/index.js"],"names":["React","Component","FaGitAlt","FaPlus","FaSpinner","FaTrashAlt","Link","api","Container","Form","SubmitButton","List","DeleteButton","Error","Main","state","newRepo","repositories","loading","err","handleInputChange","e","setState","target","value","handleDelete","repo","find","r","handleSubmit","preventDefault","response","get","data","name","full_name","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGitAlt, FaPlus, FaSpinner, FaTrashAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom'\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List, DeleteButton, Error } from './styles'\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n    err: false,\n  };\n\n  // Load datas in localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // Save datas in localStorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value });\n  }\n\n  handleDelete = repo => {\n    const { repositories } = this.state;\n    this.setState({ repositories: repositories.find(r => r !== repo) })\n  }\n\n  handleSubmit = async e => {\n    try {\n      e.preventDefault();\n\n      this.setState({ loading: true, err: false });\n\n      const { newRepo, repositories } = this.state;\n\n\n      const response = await api.get(`/repos/${newRepo}`);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n      });\n    } catch (err) {\n      this.setState({ loading: false, err: true })\n    }\n  }\n\n  render() {\n    const { newRepo, loading, repositories, err } = this.state;\n\n    return (\n      <Container err={err}>\n        <h1>\n          <FaGitAlt />\n          Reposit√≥rios\n        </h1>\n\n        <Form onSubmit={this.handleSubmit} err={err}>\n          <input\n            err={err}\n            type=\"text\"\n            placeholder=\"Adicione o 'Nome de usu√°rio / nome do reposit√≥rio'\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n\n          <SubmitButton loading={loading}>\n            {loading ? ( // If the loading is true show the Spinner icon\n              <FaSpinner color=\"#FFF\" size={14} />\n            ) : ( // Else Show the plus icon\n                <FaPlus color=\"#FFF\" size={14} />\n              )}\n          </SubmitButton>\n        </Form>\n        <List>\n          {repositories.map(repository =>\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <div>\n                <Link to={`/repository/${encodeURIComponent(repository.name)}`}>Detalhes</Link>\n                <DeleteButton onDelete={() => this.handleDelete(repository)}><FaTrashAlt color=\"#FFF\" size={12} /></DeleteButton>\n              </div>\n            </li>\n          )}\n        </List>\n      </Container >\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}